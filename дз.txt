Да, конечно, можно преобразовать столбец DataFrame whoAmI в форму one-hot encoding без использования функции get_dummies.
Вместо этого мы можем вручную создать новые столбцы для каждой категории и заполнить их значениями 0 или 1 в зависимости от того,
к какой категории относится каждая строка.
Вот как это можно сделать:
import pandas as pd
import random

# Создание исходных данных
lst = ['robot'] * 10 + ['human'] * 10
random.shuffle(lst)
data = pd.DataFrame({'whoAmI': lst})

# Получение уникальных значений из столбца 'whoAmI'
categories = data['whoAmI'].unique()

# Создание новых столбцов для каждой категории
for category in categories:
    data[category] = (data['whoAmI'] == category).astype(int)

# Удаление исходного столбца 'whoAmI'
data.drop('whoAmI', axis=1, inplace=True)

# Вывод первых нескольких строк преобразованных данных
data.head()

В этом коде мы сначала создаем DataFrame data, который содержит один столбец 'whoAmI' с категориями 'robot' и 'human'. 
Затем мы получаем список уникальных категорий из этого столбца. 
Далее мы создаем новые столбцы в DataFrame data для каждой уникальной категории.
Значение каждого нового столбца устанавливается в 1, если соответствующая строка в столбце 'whoAmI' соответствует этой категории,
и в 0 в противном случае.
Наконец, исходный столбец 'whoAmI' удаляется из DataFrame data. 
В результате у нас будет DataFrame, преобразованный в форму one-hot encoding, где каждая категория представлена своим 
собственным столбцом с бинарными значениями.
